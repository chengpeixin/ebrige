{"id":"../node_modules/ebrige/dist/ebrige.es5.js","dependencies":[{"name":"/home/xpc/myProject/vue-brige/eBrige/package.json","includedInParent":true,"mtime":1561087127658},{"name":"/home/xpc/myProject/vue-brige/eBrige/node_modules/ebrige/package.json","includedInParent":true,"mtime":1561087122994}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction enCodeRequestData(data) {\n  // data = JSON.stringify(data)\n  return window.btoa(encodeURIComponent(JSON.stringify(data))); // return window.btoa(data)\n}\n\nfunction isPlainObject(val) {\n  return toString.call(val) === '[object Object]';\n}\n\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\nfunction createIframe() {\n  return document.createElement('iframe');\n}\n\nvar mediumConfig = {\n  display: 'none',\n  opacity: '0',\n  height: '0px',\n  width: '0px'\n};\n\nfunction setMedium(medium, requestUrl) {\n  Object.keys(mediumConfig).forEach(function (k) {\n    medium.style[k] = mediumConfig[k];\n  });\n  medium.src = requestUrl;\n  return medium;\n}\n\nvar CreateOb =\n/** @class */\nfunction () {\n  function CreateOb(callId) {\n    this.initObData(callId);\n    this.observe(callId);\n  }\n\n  CreateOb.prototype.initObData = function (callId) {\n    this.defaultObParams = {\n      status: 0,\n      data: null,\n      callId: callId\n    };\n    window[callId] = Object.create(null);\n  };\n\n  CreateOb.prototype.observe = function (callId) {\n    var _this = this;\n\n    var defaultObParams = this.defaultObParams;\n    var obData = window[callId];\n\n    var _loop_1 = function (key) {\n      Object.defineProperty(obData, key, {\n        get: function () {\n          return defaultObParams[key];\n        },\n        set: function (newVal) {\n          defaultObParams[key] = newVal;\n          if (key !== 'status') return;\n          if (isFunction(_this.cb)) _this.cb(defaultObParams, key, newVal);\n        },\n        enumerable: true,\n        configurable: true\n      });\n    };\n\n    for (var key in this.defaultObParams) {\n      _loop_1(key);\n    }\n  };\n\n  CreateOb.prototype.onResolved = function (cb) {\n    this.cb = cb;\n  };\n\n  return CreateOb;\n}();\n\nfunction brige(_a) {\n  var url = _a.url,\n      data = _a.data,\n      cb = _a.cb,\n      action = _a.action;\n  return new Promise(function (resolve, reject) {\n    var callId = action + Date.now();\n    var requestUrl = url + \"data=\" + data + \"&callId=\" + callId;\n    var medium = createIframe();\n    setMedium(medium, requestUrl);\n    sendRequest(medium);\n    var ob = new CreateOb(callId);\n    console.log(requestUrl);\n    ob.onResolved(function (brigeData) {\n      var responseData = brigeData.data;\n\n      if (isFunction(cb)) {\n        cb(responseData);\n      } else {\n        if (brigeData.status !== 1) reject(brigeData.status);\n        resolve(responseData);\n      }\n    });\n    setTimeout(function () {\n      document.body.removeChild(medium);\n      medium = null;\n    });\n  });\n}\n\nfunction sendRequest(medium) {\n  var body = document.body;\n  body.appendChild(medium);\n}\n\nfunction dispatchCommit(config) {\n  processConfig(config);\n  return brige(config);\n}\n\nfunction processConfig(config) {\n  config.url = transformURL(config);\n  config.data = transformData(config);\n}\n\nfunction transformURL(config) {\n  var schema = config.schema,\n      action = config.action;\n  return \"\" + schema + action + \"?\";\n}\n\nfunction transformData(_a) {\n  var data = _a.data;\n  if (isFunction(data) && !isPlainObject(data)) data = {};\n  return enCodeRequestData(data);\n} // import { isPlainObject, isFunction } from './../helpers/util'\n\n\nvar Ebrige =\n/** @class */\nfunction () {\n  function Ebrige(initConfig) {\n    this.defaults = initConfig;\n  }\n\n  Ebrige.prototype.dispatch = function (action, data, cb) {\n    return this.commit(action, data, cb);\n  };\n\n  Ebrige.prototype.commit = function (action, data, cb) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    this.defaults = Object.assign(this.defaults, {\n      action: action,\n      data: data,\n      cb: cb\n    });\n    return dispatchCommit(this.defaults);\n  };\n\n  return Ebrige;\n}();\n\nvar defaults = {\n  schema: 'brige://',\n  timeout: 2000,\n  data: {}\n};\n\nfunction createInstance(config) {\n  var context = new Ebrige(config);\n  return context;\n}\n\nvar ebrige = createInstance(defaults);\nvar _default = ebrige;\nexports.default = _default;"},"sourceMaps":null,"error":null,"hash":"aab8bd262d97233d8a5459999a9e62cd","cacheData":{"env":{}}}